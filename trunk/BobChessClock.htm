<html>
<!--
http://code.google.com/p/bobchess/
Copyright (C) 2008 James (james at doubtlesshouse dot org dot uk)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

Revision $Revision$ checked in $Date$
                                                            -->

<head>
<title>Bob The Chess Clock</title>
<script>
// holds the time the currently running clock started
var LastTouch = false;
// holds how much time each player has left in milliseconds
var players = new Array(0,0);
// current state, -1 before start, -2 all over, 0 or 1: player moving
var moving = -1;
// pointer to timer that updates screen so it can be stopped later
var timer = false;
// fischer mode
var fischerSecs = 0;
var fischerBefore = false;
var fischerAfter = false;

function startMatch() {
	var time = parseInt(document.getElementById('Hrs').value)*60*60 
		+ parseInt(document.getElementById('Mins').value)*60
		+ parseInt(document.getElementById('Secs').value);

	if (isNaN(time)) {
		alert('We could not parse the time you requested as a recognised number. Please try again.');
		return;
	}

	players[0] = time * 1000;
	players[1] = time * 1000;

	if (document.getElementById('Fischer').checked) {
		fischerSecs = parseInt(document.getElementById('FischerSecs').value) * 1000;
		if (isNaN(fischerSecs)) {
			alert('We could not parse the number of seconds you requested for Fischer mode as a recognised number. Please try again.');
			return;
		}
		var ele = document.getElementById('FischerMode');
		if (ele.options[ele.selectedIndex].value == "0") { fischerBefore = true; } else { fischerAfter = true; }
	}

	document.getElementById('start').style.display = 'none';
	document.getElementById('play').style.display = 'block';
	
	update();
}

function update() {
	var timenow = new Array(players[0],players[1]);
	if (moving == 0 || moving == 1) {
		var now = new Date();
		timenow[moving] = timenow[moving] - parseInt((now.getTime() - LastTouch.getTime()));
	}

	// if match has ended .......
	if (timenow[0] <= 0) { players[0] = 0; moving = -2; clearInterval(timer); }
	if (timenow[1] <= 0) { players[1] - 0; moving = -2; clearInterval(timer); }

	document.getElementById('player1').value = renderTime(timenow[0], (moving == 0));
	document.getElementById('player2').value = renderTime(timenow[1], (moving == 1));
}

function renderTime(seconds, running) {
	seconds = seconds / 1000;
	var out = parseInt(seconds / (60*60))+":"+parseInt((seconds / 60)%60)+":"+parseInt(seconds%60);
	if (running) { out = "* "+out + " *"; }
	return out;
}

function clickPlayer(player) {
	if (moving == -2) { return; }
	else if (player == moving) {
		// normal move
		var now = new Date();
		players[moving] = players[moving] - (now.getTime() - LastTouch.getTime());
		if (fischerAfter) players[moving] = players[moving] + fischerSecs;
		LastTouch = new Date();
		if (player == 1 ) { moving = 0; } else { moving = 1; }
		if (fischerBefore) players[moving] = players[moving] + fischerSecs;
		update();
	} else if (moving == -1) {
		// we are starting the match
		document.onkeyup = key;
		moving = player;
		if (fischerBefore) players[moving] = players[moving] + fischerSecs;
		timer = setInterval("update()",400);
		LastTouch = new Date();
		update();
	}
}

function key(e) {
	var k = (window.event) ? event.keyCode : e.keyCode;
	if (k == 49 || k == 50 || k == 51 || k == 52 || k == 53 || k == 81 || k == 113 || k == 87 || k == 119 || k == 69 || k == 101 || k == 84 || k == 116 || k == 65 || k == 97 || k == 83 || k == 115 || k == 68 || k == 100 || k == 70 || k == 102 || k == 71 || k == 103 || k == 90 || k == 122 || k == 88 || k == 120 || k == 67 || k == 99 || k == 86 || k == 118) {
		clickPlayer(0);
	} else if (k == 54 || k == 55 || k == 56 || k == 57 || k == 48 || k == 89 || k == 121 || k == 85 || k == 117 || k == 73 || k == 105 || k == 79 || k == 111 || k == 80 || k == 112 || k == 72 || k == 104 || k == 74 || k == 105 || k == 74 || k == 106 || k == 75 || k == 107 || k == 76 || k == 108 || k == 66 || k == 98 || k == 78 || k == 110 || k == 77 || k == 109) {
		clickPlayer(1);
	}
}

</script>
</head>
<body>

<div id="play" style="display: none; height:90%; width: 90%;">
<input type="button" style=" font-size:300%; width:45%; height:90%; text-align: left; background-color: black; color: white; padding: 10px;" id="player1" onclick="clickPlayer(0);">
<input type="button" style=" font-size:300%; width:45%; height:90%; text-align: right; padding: 10px;" id="player2" onclick="clickPlayer(1);">
</div>

<div id="start">
<h1>bobChess Online Chess Clock</h1>
<p>Please set time.</p>
<p><input type=text id="Hrs" size="2" value="0">hrs:<input type=text id="Mins" size="2" value="5">mins:<input type=text id="Secs" size="2" value="00">secs</p>
<p><input type="radio" name="Mode" id="NormalChess" checked="checked"><label for="NormalChess">Normal Chess Clock</label></p>
<p><input type="radio" name="Mode" id="Fischer"><label for="Fischer">Fischer Clock; add </label><input type="text" id="FischerSecs" value="5" size="2"> seconds <select id="FischerMode"><option value=0>Before</option><option value=1>After</option></select> every move.</p>
<p><input value="Start The Match" type=submit onclick="startMatch(); return false;"></p>
<p>Click one of the clocks to start. Press a number or letter key on one side of the keyboard to switch clock. Hit Refresh to return to this screen again.</p>
<p>This is open souce. <a href="http://code.google.com/p/bobchess/">Visit the home page here</a>.</p>
</div>


</body>
</html>
